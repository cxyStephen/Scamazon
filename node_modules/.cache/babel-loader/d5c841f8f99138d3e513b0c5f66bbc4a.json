{"ast":null,"code":"var _jsxFileName = \"/Users/Tiffany/Desktop/cse305/src/components/userAuth.jsx\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { api } from \"../constants\";\n\nclass userAuth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      pw: \"\",\n      isRegister: false,\n      registerText: \"I need to create an account\",\n      header: \"Log in\",\n      loggedIn: false,\n      error: \"\"\n    };\n\n    this.handleSignInText = () => {\n      const isRegister = !this.state.isRegister;\n      const registerText = isRegister ? \"I already have an account\" : \"I need to create an account\";\n      const header = isRegister ? \"Sign up\" : \"Log in\";\n      this.setState({\n        isRegister,\n        registerText,\n        header\n      });\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      if (!this.validateForm()) return;\n      const data = JSON.stringify({\n        email: this.state.email,\n        pw: this.state.pw\n      });\n      const url = api + (this.state.isRegister ? \"/create_user\" : \"/login\"); //console.log(this.props);\n\n      fetch(url, {\n        method: \"POST\",\n        body: data,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(response => {\n        console.log(response.success + \"\\n\" + response.message);\n\n        if (response.success) {\n          this.props.onLogin(this.state.email);\n          if (this.state.isRegister) this.props.history.push(\"/user/type\");else if (this._isMounted && !this.state.isRegister) {\n            this.setState({\n              loggedIn: true\n            });\n          }\n        } else if (this._isMounted) {\n          this.setState({\n            error: response.message\n          });\n        }\n      }).catch(error => console.error(error));\n    };\n\n    this._isMounted = false;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    if (this.props.email.length > 0) return React.createElement(Redirect, {\n      to: \"/user/account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n    let errorAlert;\n    if (this.state.error.length > 0) errorAlert = React.createElement(Alert, {\n      variant: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.error);\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, errorAlert, React.createElement(\"h1\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.header), React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"pw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"div\", {\n      onClick: this.handleSignInText,\n      className: \"m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.registerText))));\n  }\n\n  validateForm() {\n    let isValid = true;\n\n    if (this.state.email.length === 0) {\n      isValid = false;\n    }\n\n    if (this.state.pw.length === 0) {\n      isValid = false;\n    }\n\n    return isValid;\n  }\n\n}\n\nexport default userAuth;","map":{"version":3,"sources":["/Users/Tiffany/Desktop/cse305/src/components/userAuth.jsx"],"names":["React","Component","Redirect","Form","Button","Container","Row","Alert","api","userAuth","constructor","props","state","email","pw","isRegister","registerText","header","loggedIn","error","handleSignInText","setState","handleChange","e","preventDefault","target","id","value","handleSubmit","validateForm","data","JSON","stringify","url","fetch","method","body","headers","then","res","json","response","console","log","success","message","onLogin","history","push","_isMounted","catch","componentWillUnmount","render","length","errorAlert","isValid"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { api } from \"../constants\";\n\nclass userAuth extends Component {\n  state = {\n    email: \"\",\n    pw: \"\",\n    isRegister: false,\n    registerText: \"I need to create an account\",\n    header: \"Log in\",\n    loggedIn: false,\n    error: \"\"\n  };\n\n  constructor(props) {\n    super(props);\n\n    this._isMounted = false;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    if (this.props.email.length > 0) return <Redirect to=\"/user/account\" />;\n\n    let errorAlert;\n    if (this.state.error.length > 0)\n      errorAlert = <Alert variant=\"danger\">{this.state.error}</Alert>;\n\n    return (\n      <Container>\n        {errorAlert}\n        <h1 className=\"mb-3\">{this.state.header}</h1>\n        <Row className=\"justify-content-md-center\">\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"pw\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n            <div onClick={this.handleSignInText} className=\"m-2\">\n              {this.state.registerText}\n            </div>\n          </Form>\n        </Row>\n      </Container>\n    );\n  }\n\n  handleSignInText = () => {\n    const isRegister = !this.state.isRegister;\n    const registerText = isRegister\n      ? \"I already have an account\"\n      : \"I need to create an account\";\n    const header = isRegister ? \"Sign up\" : \"Log in\";\n    this.setState({ isRegister, registerText, header });\n  };\n\n  handleChange = e => {\n    e.preventDefault();\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (!this.validateForm()) return;\n    const data = JSON.stringify({\n      email: this.state.email,\n      pw: this.state.pw\n    });\n    const url = api + (this.state.isRegister ? \"/create_user\" : \"/login\");\n    //console.log(this.props);\n    fetch(url, {\n      method: \"POST\",\n      body: data,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(response => {\n        console.log(response.success + \"\\n\" + response.message);\n        if (response.success) {\n          this.props.onLogin(this.state.email);\n          if (this.state.isRegister) this.props.history.push(\"/user/type\");\n          else if (this._isMounted && !this.state.isRegister) {\n            this.setState({ loggedIn: true });\n          }\n        } else if (this._isMounted) {\n          this.setState({ error: response.message });\n        }\n      })\n      .catch(error => console.error(error));\n  };\n\n  validateForm() {\n    let isValid = true;\n    if (this.state.email.length === 0) {\n      isValid = false;\n    }\n    if (this.state.pw.length === 0) {\n      isValid = false;\n    }\n    return isValid;\n  }\n}\n\nexport default userAuth;\n"]},"metadata":{},"sourceType":"module"}