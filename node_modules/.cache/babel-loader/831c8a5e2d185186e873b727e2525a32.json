{"ast":null,"code":"var _jsxFileName = \"/Users/Tiffany/Desktop/cse305/src/components/UserType.jsx\";\nimport React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { api } from \"../constants\";\n\nclass UserType extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      createCustomer: false,\n      createSeller: false,\n      fname: \"\",\n      lname: \"\",\n      name: \"\",\n      error: \"\"\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onClickCustomer = e => {\n      this.setState({\n        createCustomer: e.target.checked,\n        createSeller: !e.target.checked\n      });\n    };\n\n    this.onClickSeller = e => {\n      this.setState({\n        createSeller: e.target.checked,\n        createCustomer: !e.target.checked\n      });\n    };\n\n    this.createUserType = () => {\n      let url;\n      let data;\n\n      if (this.state.createCustomer) {\n        url = api + \"/create_customer\";\n        data = JSON.stringify({\n          email: this.props.email,\n          fname: this.state.fname,\n          lname: this.state.lname\n        });\n      } else if (this.state.createSeller) {\n        url = api + \"/create_seller\";\n        data = JSON.stringify({\n          email: this.props.email,\n          name: this.state.name\n        });\n      } else {\n        this.setState({\n          error: \"Something went wrong!\"\n        });\n        return;\n      }\n\n      fetch(url, {\n        method: \"POST\",\n        body: data,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(response => {\n        if (response.success) {\n          this.props.history.push(\"/\");\n          console.log(response);\n        } else {\n          this.setState({\n            error: response.message\n          });\n        }\n      }).catch(error => console.error(error));\n    };\n  }\n\n  render() {\n    let customerForm, sellerForm;\n    if (this.state.createCustomer) customerForm = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"fname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"First name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"lname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Last name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      className: \"m-2\",\n      onClick: () => this.createUserType(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Create customer\"));else if (this.state.createSeller) sellerForm = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Display name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      className: \"m-2\",\n      onClick: () => this.createUserType(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Create seller\"));\n    let errorAlert;\n    if (this.state.error.length > 0) errorAlert = React.createElement(Alert, {\n      variant: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.error);\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, errorAlert, React.createElement(\"div\", {\n      className: \"text-md-left m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      as: \"legend\",\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Register as a:\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"radio\",\n      label: \"Customer\",\n      name: \"formHorizontalRadios\",\n      id: \"customerRadio\",\n      onChange: this.onClickCustomer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Form.Check, {\n      type: \"radio\",\n      label: \"Seller\",\n      name: \"formHorizontalRadios\",\n      id: \"sellerRadio\",\n      onChange: this.onClickSeller,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })))), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, customerForm, sellerForm));\n  }\n\n}\n\nexport default UserType;","map":{"version":3,"sources":["/Users/Tiffany/Desktop/cse305/src/components/UserType.jsx"],"names":["React","Component","Form","Col","Row","Container","Button","FormLabel","Alert","api","UserType","state","createCustomer","createSeller","fname","lname","name","error","handleChange","e","preventDefault","setState","target","id","value","onClickCustomer","checked","onClickSeller","createUserType","url","data","JSON","stringify","email","props","fetch","method","body","headers","then","res","json","response","success","history","push","console","log","message","catch","render","customerForm","sellerForm","errorAlert","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { api } from \"../constants\";\n\nclass UserType extends Component {\n  state = {\n    createCustomer: false,\n    createSeller: false,\n    fname: \"\",\n    lname: \"\",\n    name: \"\",\n    error: \"\"\n  };\n\n  render() {\n    let customerForm, sellerForm;\n    if (this.state.createCustomer)\n      customerForm = (\n        <div>\n          <Row>\n            <Form.Group as={Col} controlId=\"fname\">\n              <FormLabel>First Name</FormLabel>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"First name\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"lname\">\n              <FormLabel>Last Name</FormLabel>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Last name\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n          </Row>\n          <Button className=\"m-2\" onClick={() => this.createUserType()}>\n            Create customer\n          </Button>\n        </div>\n      );\n    else if (this.state.createSeller)\n      sellerForm = (\n        <div>\n          <Row>\n            <Form.Group as={Col} controlId=\"name\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Display name\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n          </Row>\n          <Button className=\"m-2\" onClick={() => this.createUserType()}>\n            Create seller\n          </Button>\n        </div>\n      );\n    let errorAlert;\n\n    if (this.state.error.length > 0)\n      errorAlert = <Alert variant=\"danger\">{this.state.error}</Alert>;\n\n    return (\n      <Form>\n        {errorAlert}\n        <div className=\"text-md-left m-3\">\n          <Form.Group>\n            <Form.Label as=\"legend\" column sm={2}>\n              Register as a:\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Check\n                type=\"radio\"\n                label=\"Customer\"\n                name=\"formHorizontalRadios\"\n                id=\"customerRadio\"\n                onChange={this.onClickCustomer}\n              />\n              <Form.Check\n                type=\"radio\"\n                label=\"Seller\"\n                name=\"formHorizontalRadios\"\n                id=\"sellerRadio\"\n                onChange={this.onClickSeller}\n              />\n            </Col>\n          </Form.Group>\n        </div>\n        <Container>\n          {customerForm}\n          {sellerForm}\n        </Container>\n      </Form>\n    );\n  }\n  handleChange = e => {\n    e.preventDefault();\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onClickCustomer = e => {\n    this.setState({\n      createCustomer: e.target.checked,\n      createSeller: !e.target.checked\n    });\n  };\n  onClickSeller = e => {\n    this.setState({\n      createSeller: e.target.checked,\n      createCustomer: !e.target.checked\n    });\n  };\n  createUserType = () => {\n    let url;\n    let data;\n    if (this.state.createCustomer) {\n      url = api + \"/create_customer\";\n      data = JSON.stringify({\n        email: this.props.email,\n        fname: this.state.fname,\n        lname: this.state.lname\n      });\n    } else if (this.state.createSeller) {\n      url = api + \"/create_seller\";\n      data = JSON.stringify({\n        email: this.props.email,\n        name: this.state.name\n      });\n    } else {\n      this.setState({ error: \"Something went wrong!\" });\n      return;\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: data,\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response.success) {\n          this.props.history.push(\"/\");\n          console.log(response);\n        } else {\n          this.setState({ error: response.message });\n        }\n      })\n      .catch(error => console.error(error));\n  };\n}\n\nexport default UserType;\n"]},"metadata":{},"sourceType":"module"}