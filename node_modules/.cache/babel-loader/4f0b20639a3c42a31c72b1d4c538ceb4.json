{"ast":null,"code":"var _jsxFileName = \"/Users/Tiffany/Desktop/cse305/src/components/ItemForm.jsx\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport API from \"../constants\";\n\nclass ItemForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      const target = e.target;\n      this.setState({\n        [target.name]: target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const data = JSON.stringify({\n        name: this.state.name,\n        desc: this.state.desc,\n        manufacturer: this.state.manufacturer,\n        category: this.state.category\n      });\n      fetch(API + \"/create_item\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: data\n      }).then(response => response.json()).then(data => {\n        console.log(data.success + \"\\n\" + data.message);\n\n        if (data.success) {\n          alert(\"A new item was created.\");\n          window.location.reload();\n        } else {\n          alert(\"Error: Could not create a new item.\");\n        }\n      }).catch(error => console.error(error));\n    };\n\n    this.state = {\n      name: \"\",\n      desc: \"\",\n      manufacturer: \"\",\n      category: \"\",\n      categories: [],\n      isLoading: false,\n      error: null\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(API + \"/get_categories\").then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(\"Something went wrong...\");\n      }\n    }).then(data => this.setState({\n      categories: data.categories,\n      isLoading: false\n    })).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          categories = _this$state.categories,\n          isLoading = _this$state.isLoading,\n          error = _this$state.error;\n\n    if (error) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, error.message);\n    }\n\n    if (isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Create a new item\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Item Name:\", React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"name\",\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.handleInputChange,\n      placeholder: \"Enter a name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Item Description:\", React.createElement(\"textarea\", {\n      className: \"form-control\",\n      name: \"desc\",\n      value: this.state.description,\n      onChange: this.handleInputChange,\n      placeholder: \"Enter a description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Item Manufacturer:\", React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"manufacturer\",\n      type: \"text\",\n      value: this.state.manufacturer,\n      onChange: this.handleInputChange,\n      placeholder: \"Enter a manufacturer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Item Category:\", React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"category\",\n      value: this.state.category,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, categories.map(category => React.createElement(\"option\", {\n      value: category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, category))))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default ItemForm;","map":{"version":3,"sources":["/Users/Tiffany/Desktop/cse305/src/components/ItemForm.jsx"],"names":["React","Component","API","ItemForm","constructor","props","handleInputChange","e","target","setState","name","value","handleSubmit","preventDefault","data","JSON","stringify","state","desc","manufacturer","category","fetch","method","headers","body","then","response","json","console","log","success","message","alert","window","location","reload","catch","error","categories","isLoading","bind","componentDidMount","ok","Error","render","description","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kCAAP;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgCnBC,iBAhCmB,GAgCCC,CAAC,IAAI;AACvB,YAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;AACA,WAAKC,QAAL,CAAc;AACZ,SAACD,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AADV,OAAd;AAGD,KArCkB;;AAAA,SAuCnBC,YAvCmB,GAuCJL,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACM,cAAF;AACA,YAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BN,QAAAA,IAAI,EAAE,KAAKO,KAAL,CAAWP,IADS;AAE1BQ,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAFS;AAG1BC,QAAAA,YAAY,EAAE,KAAKF,KAAL,CAAWE,YAHC;AAI1BC,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG;AAJK,OAAf,CAAb;AAMAC,MAAAA,KAAK,CAACnB,GAAG,GAAG,cAAP,EAAuB;AAC1BoB,QAAAA,MAAM,EAAE,MADkB;AAE1BC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFiB;AAG1BC,QAAAA,IAAI,EAAEV;AAHoB,OAAvB,CAAL,CAKCW,IALD,CAKMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALlB,EAMCF,IAND,CAMMX,IAAI,IAAI;AACZc,QAAAA,OAAO,CAACC,GAAR,CAAYf,IAAI,CAACgB,OAAL,GAAe,IAAf,GAAsBhB,IAAI,CAACiB,OAAvC;;AACA,YAAIjB,IAAI,CAACgB,OAAT,EAAkB;AAChBE,UAAAA,KAAK,CAAC,yBAAD,CAAL;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,SAHD,MAGO;AACLH,UAAAA,KAAK,CAAC,qCAAD,CAAL;AACD;AACF,OAdD,EAeCI,KAfD,CAeOC,KAAK,IAAIT,OAAO,CAACS,KAAR,CAAcA,KAAd,CAfhB;AAgBD,KA/DkB;;AAEjB,SAAKpB,KAAL,GAAa;AACXP,MAAAA,IAAI,EAAE,EADK;AAEXQ,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,YAAY,EAAE,EAHH;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXkB,MAAAA,UAAU,EAAE,EALD;AAMXC,MAAAA,SAAS,EAAE,KANA;AAOXF,MAAAA,KAAK,EAAE;AAPI,KAAb;AASA,SAAK/B,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBkC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAK5B,YAAL,GAAoB,KAAKA,YAAL,CAAkB4B,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKhC,QAAL,CAAc;AAAE8B,MAAAA,SAAS,EAAE;AAAb,KAAd;AAEAlB,IAAAA,KAAK,CAACnB,GAAG,GAAG,iBAAP,CAAL,CACGuB,IADH,CACQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACgB,EAAb,EAAiB;AACf,eAAOhB,QAAQ,CAACC,IAAT,EAAP;AACD,OAFD,MAEO;AACL,cAAM,IAAIgB,KAAJ,CAAU,yBAAV,CAAN;AACD;AACF,KAPH,EAQGlB,IARH,CAQQX,IAAI,IACR,KAAKL,QAAL,CAAc;AAAE6B,MAAAA,UAAU,EAAExB,IAAI,CAACwB,UAAnB;AAA+BC,MAAAA,SAAS,EAAE;AAA1C,KAAd,CATJ,EAWGH,KAXH,CAWSC,KAAK,IAAI,KAAK5B,QAAL,CAAc;AAAE4B,MAAAA,KAAF;AAASE,MAAAA,SAAS,EAAE;AAApB,KAAd,CAXlB;AAYD;;AAmCDK,EAAAA,MAAM,GAAG;AAAA,wBACkC,KAAK3B,KADvC;AAAA,UACCqB,UADD,eACCA,UADD;AAAA,UACaC,SADb,eACaA,SADb;AAAA,UACwBF,KADxB,eACwBA,KADxB;;AAGP,QAAIA,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,KAAK,CAACN,OAAV,CAAP;AACD;;AAED,QAAIQ,SAAJ,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAM,MAAA,QAAQ,EAAE,KAAK3B,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWP,IAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKJ,iBALjB;AAME,MAAA,WAAW,EAAC,cANd;AAOE,MAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,EAeE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAW4B,WAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKvC,iBAJjB;AAKE,MAAA,WAAW,EAAC,qBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAfF,EA2BE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,cAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWE,YAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKb,iBALjB;AAME,MAAA,WAAW,EAAC,sBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CA3BF,EAwCE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWG,QAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKd,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGgC,UAAU,CAACQ,GAAX,CAAe1B,QAAQ,IACtB;AAAQ,MAAA,KAAK,EAAEA,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BA,QAA1B,CADD,CANH,CAFF,CADF,CAxCF,EAuDE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAvDF,CAFF,CADF;AAkED;;AA/I8B;;AAkJjC,eAAejB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport API from \"../constants\";\n\nclass ItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      desc: \"\",\n      manufacturer: \"\",\n      category: \"\",\n      categories: [],\n      isLoading: false,\n      error: null\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    fetch(API + \"/get_categories\")\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(\"Something went wrong...\");\n        }\n      })\n      .then(data =>\n        this.setState({ categories: data.categories, isLoading: false })\n      )\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  handleInputChange = e => {\n    const target = e.target;\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const data = JSON.stringify({\n      name: this.state.name,\n      desc: this.state.desc,\n      manufacturer: this.state.manufacturer,\n      category: this.state.category\n    });\n    fetch(API + \"/create_item\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: data\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(data.success + \"\\n\" + data.message);\n      if (data.success) {\n        alert(\"A new item was created.\");\n        window.location.reload();\n      } else {\n        alert(\"Error: Could not create a new item.\");\n      }\n    })\n    .catch(error => console.error(error));\n  }\n\n  render() {\n    const { categories, isLoading, error } = this.state;\n\n    if (error) {\n      return <p>{error.message}</p>;\n    }\n\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    return (\n      <div className=\"container\">\n        <h3>Create a new item</h3>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>\n              Item Name:\n              <input\n                className=\"form-control\"\n                name=\"name\"\n                type=\"text\"\n                value={this.state.name}\n                onChange={this.handleInputChange}\n                placeholder=\"Enter a name\"\n                required\n              />\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <label>\n              Item Description:\n              <textarea\n                className=\"form-control\"\n                name=\"desc\"\n                value={this.state.description}\n                onChange={this.handleInputChange}\n                placeholder=\"Enter a description\"\n              />\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <label>\n              Item Manufacturer:\n              <input\n                className=\"form-control\"\n                name=\"manufacturer\"\n                type=\"text\"\n                value={this.state.manufacturer}\n                onChange={this.handleInputChange}\n                placeholder=\"Enter a manufacturer\"\n              />\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <label>\n              Item Category:\n              <select\n                className=\"form-control\"\n                name=\"category\"\n                value={this.state.category}\n                onChange={this.handleInputChange}\n              >\n                {categories.map(category => (\n                  <option value={category}>{category}</option>\n                ))}\n              </select>\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ItemForm;\n"]},"metadata":{},"sourceType":"module"}