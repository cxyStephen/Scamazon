{"ast":null,"code":"var _jsxFileName = \"/Users/Tiffany/Desktop/cse305/src/components/ItemForm.jsx\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nconst API = \"http://85c320be.ngrok.io/\";\nconst GET_CATEGORIES_ENDPOINT = \"get_categories\";\nconst CREATE_ITEM_ENDPOINT = \"create_item\";\n\nclass ItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      desc: \"\",\n      manufacturer: \"\",\n      category: \"\",\n      categories: [],\n      isLoading: false,\n      error: null\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(API + GET_CATEGORIES_ENDPOINT).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(\"Something went wrong...\");\n      }\n    }).then(data => this.setState({\n      categories: data.categories,\n      isLoading: false\n    })).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = JSON.stringify({\n      name: this.state.name,\n      desc: this.state.desc,\n      manufacturer: this.state.manufacturer,\n      category: this.state.category\n    });\n    fetch(API + CREATE_ITEM_ENDPOINT, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: data\n    }).then(response => response.json()).then(data => {\n      console.log(data.success + \"\\n\" + data.message);\n\n      if (data.success) {\n        alert(\"A new item was created.\");\n        window.location.reload();\n      } else {\n        alert(\"Error: Could not create a new item.\");\n      }\n    }).catch(error => console.error(error));\n  }\n\n  render() {\n    const _this$state = this.state,\n          categories = _this$state.categories,\n          isLoading = _this$state.isLoading,\n          error = _this$state.error;\n\n    if (error) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, error.message);\n    }\n\n    if (isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Create a new item\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Item Name:\", React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"name\",\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Item Description:\", React.createElement(\"textarea\", {\n      className: \"form-control\",\n      name: \"desc\",\n      value: this.state.description,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Item Manufacturer:\", React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"manufacturer\",\n      type: \"text\",\n      value: this.state.manufacturer,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Item Category:\", React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"category\",\n      value: this.state.category,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, categories.map(category => React.createElement(\"option\", {\n      value: category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, category))))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default ItemForm;","map":{"version":3,"sources":["/Users/Tiffany/Desktop/cse305/src/components/ItemForm.jsx"],"names":["React","Component","API","GET_CATEGORIES_ENDPOINT","CREATE_ITEM_ENDPOINT","ItemForm","constructor","props","state","name","desc","manufacturer","category","categories","isLoading","error","handleInputChange","bind","handleSubmit","componentDidMount","setState","fetch","then","response","ok","json","Error","data","catch","event","target","value","preventDefault","JSON","stringify","method","headers","body","console","log","success","message","alert","window","location","reload","render","description","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst API = \"http://85c320be.ngrok.io/\";\nconst GET_CATEGORIES_ENDPOINT = \"get_categories\";\nconst CREATE_ITEM_ENDPOINT = \"create_item\";\n\nclass ItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      desc: \"\",\n      manufacturer: \"\",\n      category: \"\",\n      categories: [],\n      isLoading: false,\n      error: null\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    fetch(API + GET_CATEGORIES_ENDPOINT)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(\"Something went wrong...\");\n        }\n      })\n      .then(data =>\n        this.setState({ categories: data.categories, isLoading: false })\n      )\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = JSON.stringify({\n      name: this.state.name,\n      desc: this.state.desc,\n      manufacturer: this.state.manufacturer,\n      category: this.state.category\n    });\n    fetch(API + CREATE_ITEM_ENDPOINT, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: data\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(data.success + \"\\n\" + data.message);\n      if (data.success) {\n        alert(\"A new item was created.\");\n        window.location.reload();\n      } else {\n        alert(\"Error: Could not create a new item.\");\n      }\n    })\n    .catch(error => console.error(error));\n  }\n\n  render() {\n    const { categories, isLoading, error } = this.state;\n\n    if (error) {\n      return <p>{error.message}</p>;\n    }\n\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    return (\n      <div className=\"container\">\n        <h3>Create a new item</h3>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>\n              Item Name:\n              <input\n                className=\"form-control\"\n                name=\"name\"\n                type=\"text\"\n                value={this.state.name}\n                onChange={this.handleInputChange}\n              />\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <label>\n              Item Description:\n              <textarea\n                className=\"form-control\"\n                name=\"desc\"\n                value={this.state.description}\n                onChange={this.handleInputChange}\n              />\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <label>\n              Item Manufacturer:\n              <input\n                className=\"form-control\"\n                name=\"manufacturer\"\n                type=\"text\"\n                value={this.state.manufacturer}\n                onChange={this.handleInputChange}\n              />\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <label>\n              Item Category:\n              <select\n                className=\"form-control\"\n                name=\"category\"\n                value={this.state.category}\n                onChange={this.handleInputChange}\n              >\n                {categories.map(category => (\n                  <option value={category}>{category}</option>\n                ))}\n              </select>\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ItemForm;\n"]},"metadata":{},"sourceType":"module"}