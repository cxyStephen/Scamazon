{"ast":null,"code":"var _jsxFileName = \"/Users/Tiffany/Desktop/cse305/src/components/AddressPage.jsx\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { api } from \"../constants\";\nimport Table from \"react-bootstrap/Table\";\n\nclass AddressPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      addresses: \"\",\n      isLoading: true,\n      error: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const url = api + \"/get_addresses?\";\n    const query = \"user=\" + this.props.email;\n    if (query.length === 0) return;\n    fetch(url + query).then(res => res.json()).then(response => {\n      this.setState({\n        addresses: response.addresses,\n        isLoading: false\n      });\n      console.log(\"get_addresses: \\n\" + response.success + \"\\n\" + response.message);\n\n      if (!response.success) {\n        this.setState({\n          error: response.message\n        });\n      }\n    }).catch(error => console.error(error));\n  }\n\n  render() {\n    let table;\n\n    if (!this.state.isLoading && this.state.addresses.length > 0) {\n      table = React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Zip\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Country\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.addresses.map(data => {\n        return React.createElement(\"tr\", {\n          key: data.address_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, data.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, data.address), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, data.city), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, data.state), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, data.zip), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, data.country));\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Addresses\"), React.createElement(NavLink, {\n      to: \"address/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Add an address\"), table);\n  }\n\n}\n\nexport default AddressPage;","map":{"version":3,"sources":["/Users/Tiffany/Desktop/cse305/src/components/AddressPage.jsx"],"names":["React","Component","NavLink","api","Table","AddressPage","state","addresses","isLoading","error","componentDidMount","url","query","props","email","length","fetch","then","res","json","response","setState","console","log","success","message","catch","render","table","map","data","address_id","name","address","city","zip","country"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { api } from \"../constants\";\nimport Table from \"react-bootstrap/Table\";\n\nclass AddressPage extends Component {\n  state = {\n    addresses: \"\",\n    isLoading: true,\n    error: \"\"\n  };\n\n  componentDidMount() {\n    const url = api + \"/get_addresses?\";\n    const query = \"user=\" + this.props.email;\n    if (query.length === 0) return;\n    fetch(url + query)\n      .then(res => res.json())\n      .then(response => {\n        this.setState({ addresses: response.addresses, isLoading: false });\n        console.log(\n          \"get_addresses: \\n\" + response.success + \"\\n\" + response.message\n        );\n        if (!response.success) {\n          this.setState({ error: response.message });\n        }\n      })\n      .catch(error => console.error(error));\n  }\n\n  render() {\n    let table;\n    if (!this.state.isLoading && this.state.addresses.length > 0) {\n      table = (\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Address</th>\n              <th>City</th>\n              <th>State</th>\n              <th>Zip</th>\n              <th>Country</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.addresses.map(data => {\n              return (\n                <tr key={data.address_id}>\n                  <td>{data.name}</td>\n                  <td>{data.address}</td>\n                  <td>{data.city}</td>\n                  <td>{data.state}</td>\n                  <td>{data.zip}</td>\n                  <td>{data.country}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      );\n    }\n    return (\n      <div>\n        <div>Addresses</div>\n        <NavLink to=\"address/new\">Add an address</NavLink>\n        {table}\n      </div>\n    );\n  }\n}\n\nexport default AddressPage;\n"]},"metadata":{},"sourceType":"module"}